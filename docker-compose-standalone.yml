### Before building the project, make sure you have specified the required environment variables in the .env file
version: "3.9"

networks:
  ydeas_local:
    driver: bridge

### Services ###
services:
  ### Databases ###
  db-ydeas:
    build:
      context: db
      dockerfile: Dockerfile
    container_name: db_ydeas
    environment:
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGDATA=/var/lib/postgresql/data
    volumes:
      - ~/postgres_data/ydeas:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - ydeas_local

  ### Kafka ###
  kafka:
    image: bitnami/kafka:latest
    container_name: ydeas_kafka
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_BROKER_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=1
    networks:
      - ydeas_local

  ### Keycloak ###
  keycloak-db:
    image: library/postgres
    container_name: ydeas_keycloak_db
    environment:
      - POSTGRES_USER:${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=keycloak_db
    volumes:
      - ~/postgres_data/ydeas_keycloak:/var/lib/postgresql/data
    ports:
      - "5442:5432"
    networks:
      - ydeas_local

  keycloak:
    image: quay.io/keycloak/keycloak
    container_name: ydeas_keycloak
    environment:
      - DB_VENDOR=POSTGRES
      - DB_ADDR=keycloak-db
      - DB_DATABASE=keycloak_db
      - DB_USER=${POSTGRES_USERNAME}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN_USERNAME}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
    ports:
      - "8180:8180"
    depends_on:
      - keycloak-db
    links:
      - "keycloak-db:keycloak-db"
    command: [ "start-dev", "--http-port=8180" ]
    networks:
      - ydeas_local

  ### Eureka ###
  app-eureka-server:
    image: ndiac/ydeas_eureka_server
    build:
      context: .
      dockerfile: eureka-server/Dockerfile
    container_name: ydeas_eureka_server
    environment:
      - spring.application.name=EUREKA-SERVER
    ports:
      - "8761:8761"
    networks:
      - ydeas_local

  ### Files ###
  app-files:
    image: ndiac/ydeas_files
    build:
      context: .
      dockerfile: files/Dockerfile
    container_name: ydeas_files
    environment:
      - spring.application.name=FILES
      - spring.profiles.active=prod
      - eureka.client.serviceUrl.defaultZone=http://app-eureka-server:8761/eureka/
      - s3.host.name=${S3_HOST_NAME}
      - s3.region.name=${S3_HOST_REGION}
      - s3.bucket.name=${S3_BUCKET}
      - s3.access.key.id=${S3_ACCESS_KEY_ID}
      - s3.access.key.secret=${S3_ACCESS_KEY_SECRET}
    depends_on:
      - app-eureka-server
    networks:
      - ydeas_local

  ### Ideas ###
  app-ideas:
    image: ndiac/ydeas_ideas
    build:
      context: .
      dockerfile: ideas/Dockerfile
    container_name: ydeas_ideas
    environment:
      - spring.application.name=IDEAS
      - spring.profiles.active=prod
      - eureka.client.serviceUrl.defaultZone=http://app-eureka-server:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db-ydeas:5432/ydeas_ideas
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - files-service-url=http://app-files
      - spring.kafka.bootstrap-servers=http://kafka:9092
      - spring.security.oauth2.resourceserver.jwt.issuer-uri=http://127.0.0.1:8180/realms/${KEYCLOAK_REALM_NAME}
    depends_on:
      - app-files
      - db-ydeas
      - kafka
      - app-eureka-server
    networks:
      - ydeas_local

  ### Notifications ###
  app-notifications:
    image: ndiac/ydeas_notifications
    build:
      context: .
      dockerfile: notifications/Dockerfile
    container_name: ydeas_notifications
    environment:
      - spring.application.name=NOTIFICATIONS
      - spring.profiles.active=prod
      - eureka.client.serviceUrl.defaultZone=http://app-eureka-server:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db-ydeas:5432/ydeas_ideas
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - spring.kafka.consumer.group-id=${KAFKA_CONSUMER_GROUP_ID}
      - spring.kafka.bootstrap-servers=http://kafka:9092
    depends_on:
      - db-ydeas
      - kafka
      - app-eureka-server
    networks:
      - ydeas_local

  ### Users ###
  app-users:
    image: ndiac/ydeas_users
    build:
      context: .
      dockerfile: users/Dockerfile
    container_name: ydeas_users
    environment:
      - spring.application.name=USERS
      - spring.profiles.active=prod
      - eureka.client.serviceUrl.defaultZone=http://app-eureka-server:8761/eureka/
      - keycloak.serverUrl=http://keycloak:8180
      - keycloak.realmName=${KEYCLOAK_REALM_NAME}
      - keycloak.clientId=${KEYCLOAK_CLIENT_ID}
      - keycloak.clientSecret=${KEYCLOAK_CLIENT_SECRET}
    depends_on:
      - app-eureka-server
    networks:
      - ydeas_local

  ### Gateway ###
  app-gateway:
    image: ndiac/ydeas_gateway
    build:
      context: .
      dockerfile: gateway/Dockerfile
    container_name: ydeas_gateway
    environment:
      - spring.application.name=GATEWAY
      - spring.profiles.active=prod
      - spring.security.oauth2.resourceserver.jwt.issuer-uri=http://keycloak:8180/realms/${KEYCLOAK_REALM_NAME}
      - eureka.client.serviceUrl.defaultZone=http://app-eureka-server:8761/eureka/
    ports:
      - "8080:8080"
    networks:
      - ydeas_local
    depends_on:
      - app-files
      - app-eureka-server
      - app-ideas
      - app-notifications
      - app-users